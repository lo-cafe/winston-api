{"version":3,"file":"index.module.js","sources":["../src/index.ts"],"sourcesContent":["import data from \"./data/symbols.json\"\nimport { SymbolName } from \"./data/types\"\nimport { Symbols } from \"./types\"\n\n/**\n * A collection of all symbols.\n *\n * @example\n *\n * ```js\n * import { symbols } from \"symbolist\"\n *\n * // symbols: {\"0.circle\": \"􀀸\", \"0.circle.fill\": \"􀀹\", ...}\n * ```\n */\nexport const symbols = data as Symbols\n\n/**\n * Get a symbol from its name.\n *\n * @param name - The name of the symbol to get.\n * @returns The symbol.\n *\n * @example\n *\n * ```js\n * const symbol = getSymbol(\"scribble.variable\")\n *\n * // symbol: \"􀤑\"\n * ```\n */\nexport function getSymbol(name: SymbolName): string | undefined {\n  return (data as Symbols)[name]\n}\n\n/**\n * Get the name of a symbol.\n *\n * @param symbol - The symbol to get the name of.\n * @returns The symbol's name.\n *\n * @example\n *\n * ```js\n * const name = getSymbolName(\"􀣳\")\n *\n * // name: \"lasso.and.sparkles\"\n * ```\n */\nexport function getSymbolName(symbol: string): SymbolName | undefined {\n  return Object.keys(data as Symbols).find(\n    (name) => (data as Symbols)[name as SymbolName] === symbol\n  ) as SymbolName | undefined\n}\n\nexport { SymbolName } from \"./data/types\"\nexport { Symbols } from \"./types\"\n"],"names":["symbols","data","getSymbol","name","getSymbolName","symbol","Object","keys","find"],"mappings":"65sHAeaA,EAAUC,WAgBPC,EAAUC,GACxB,OAAQF,EAAiBE,YAiBXC,EAAcC,GAC5B,OAAOC,OAAOC,KAAKN,GAAiBO,KAClC,SAACL,UAAUF,EAAiBE,KAAwBE"}